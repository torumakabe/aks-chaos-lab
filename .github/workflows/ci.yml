name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  format:
    name: Ruff Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: ${{ runner.os }}-uv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.13-
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: |
            src/.venv
          key: ${{ runner.os }}-venv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-3.13-
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Sync deps (dev)
        working-directory: src
        run: uv sync --group dev
      - name: Ruff format check
        working-directory: src
        run: uv run ruff format app/ --check
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: ${{ runner.os }}-uv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.13-
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: |
            src/.venv
          key: ${{ runner.os }}-venv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-3.13-
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Sync deps (dev)
        working-directory: src
        run: uv sync --group dev
      - name: Ruff check
        working-directory: src
        run: uv run ruff check app/

  typecheck:
    name: Mypy Typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: ${{ runner.os }}-uv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.13-
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: |
            src/.venv
          key: ${{ runner.os }}-venv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-3.13-
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Sync deps (dev)
        working-directory: src
        run: uv sync --group dev
      - name: Mypy
        working-directory: src
        run: uv run mypy app/
  tests:
    name: Pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: ${{ runner.os }}-uv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.13-
      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: |
            src/.venv
          key: ${{ runner.os }}-venv-3.13-${{ hashFiles('src/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-3.13-
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Sync deps (dev)
        working-directory: src
        run: uv sync --group dev
      - name: Run unit tests with coverage
        working-directory: src
        run: uv run pytest -q --cov=app --cov-report=term-missing
  bicep:
    name: Bicep Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Bicep CLI
        run: |
          set -euxo pipefail
          BICEP_VERSION=v0.37.4
          mkdir -p "$HOME/.local/bin"
          curl -L -o "$HOME/.local/bin/bicep" "https://github.com/Azure/bicep/releases/download/${BICEP_VERSION}/bicep-linux-x64"
          chmod +x "$HOME/.local/bin/bicep"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Bicep version
        run: bicep --version
      - name: Restore Bicep modules
        run: bicep restore infra/main.bicep
      - name: Validate Bicep Templates
        run: bicep build infra/main.bicep
